<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>丁丁爱历险</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nail2008.github.io/"/>
  <updated>2016-08-10T03:23:45.000Z</updated>
  <id>https://nail2008.github.io/</id>
  
  <author>
    <name>一丁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shell指令大全(Mac版)</title>
    <link href="https://nail2008.github.io/2016/08/10/shell-command-in-mac/"/>
    <id>https://nail2008.github.io/2016/08/10/shell-command-in-mac/</id>
    <published>2016-08-10T01:56:33.000Z</published>
    <updated>2016-08-10T03:23:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>龟速积累中,按照命令首字母排序</p>
<h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><h5 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h5><p>lsof（list open file）是一个列出当前系统打开文件的工具。<strong>在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件</strong>。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。</p>
<h5 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">lsof  filename 显示打开指定文件的所有进程 </div><div class="line">lsof -a 表示两个参数都必须满足时才显示结果 </div><div class="line">lsof -c string   显示COMMAND列中包含指定字符的进程所有打开的文件 </div><div class="line">lsof -u username  显示所属user进程打开的文件 </div><div class="line">lsof -g gid 显示归属gid的进程情况 </div><div class="line">lsof +d /DIR/ 显示目录下被进程打开的文件 </div><div class="line">lsof +D /DIR/ 同上，但是会搜索目录下的所有目录，时间相对较长 </div><div class="line">lsof -d FD 显示指定文件描述符的进程 </div><div class="line">lsof -n 不将IP转换为hostname，缺省是不加上-n参数 </div><div class="line">lsof -i 用以显示符合条件的进程情况 </div><div class="line">lsof -i[46] [protocol][@hostname|hostaddr][:service|port] </div><div class="line">            46 --&gt; IPv4 or IPv6 </div><div class="line">            protocol --&gt; TCP or UDP </div><div class="line">            hostname --&gt; Internet host name </div><div class="line">            hostaddr --&gt; IPv4地址 </div><div class="line">            service --&gt; /etc/service中的 service name (可以不只一个) </div><div class="line">            port --&gt; 端口号 (可以不只一个)</div></pre></td></tr></table></figure>
<h5 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h5><ul>
<li>查看22端口现在运行的情况 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsof -i :22</div></pre></td></tr></table></figure>
<ul>
<li>查看root用户进程所打开的txt文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsof -a -u root -d txt</div></pre></td></tr></table></figure>
<h5 id="延伸阅读"><a href="#延伸阅读" class="headerlink" title="延伸阅读:"></a>延伸阅读:</h5><p><a href="http://www.cnblogs.com/mydomain/archive/2011/09/27/2193560.html" target="_blank" rel="external">http://www.cnblogs.com/mydomain/archive/2011/09/27/2193560.html</a><br><a href="http://www.cnblogs.com/rootq/articles/1401850.html" target="_blank" rel="external">http://www.cnblogs.com/rootq/articles/1401850.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;龟速积累中,按照命令首字母排序&lt;/p&gt;
&lt;h3 id=&quot;lsof&quot;&gt;&lt;a href=&quot;#lsof&quot; class=&quot;headerlink&quot; title=&quot;lsof&quot;&gt;&lt;/a&gt;lsof&lt;/h3&gt;&lt;h5 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="开发工具" scheme="https://nail2008.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="shell" scheme="https://nail2008.github.io/tags/shell/"/>
    
      <category term="osx" scheme="https://nail2008.github.io/tags/osx/"/>
    
      <category term="mac" scheme="https://nail2008.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>CSS样式命名应该用id还是用class?</title>
    <link href="https://nail2008.github.io/2016/07/28/css-id-or-class/"/>
    <id>https://nail2008.github.io/2016/07/28/css-id-or-class/</id>
    <published>2016-07-28T07:25:18.000Z</published>
    <updated>2016-08-10T03:23:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h3><ul>
<li>id不可重名，class可以重复使用</li>
<li>id定义了一个独特的元素，class定义了一批同类的元素</li>
<li>id和class在优先级上是有区别的，id比class的优先级高</li>
</ul>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在复杂的css架构中,某一个组件定义的class如果单独定义可能受同名class影响并不会起作用，而使用id就一定会起效</p>
<h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><ul>
<li>顶层布局或大组件不易重名,用id来定义元素</li>
<li>组件中的子组件或元素用父组件id+子元素class的形式来定义css</li>
</ul>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//Bad：</div><div class="line">#header &#123;...&#125;</div><div class="line">.menu &#123;...&#125;</div><div class="line"></div><div class="line">//Good:</div><div class="line">#header &#123;...&#125;</div><div class="line">#header .menu &#123;...&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常识&quot;&gt;&lt;a href=&quot;#常识&quot; class=&quot;headerlink&quot; title=&quot;常识&quot;&gt;&lt;/a&gt;常识&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;id不可重名，class可以重复使用&lt;/li&gt;
&lt;li&gt;id定义了一个独特的元素，class定义了一批同类的元素&lt;/li&gt;
&lt;l
    
    </summary>
    
      <category term="Web前端" scheme="https://nail2008.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://nail2008.github.io/tags/css/"/>
    
      <category term="id" scheme="https://nail2008.github.io/tags/id/"/>
    
      <category term="class" scheme="https://nail2008.github.io/tags/class/"/>
    
  </entry>
  
  <entry>
    <title>使用es5和es6写React有什么变化</title>
    <link href="https://nail2008.github.io/2016/07/08/react-es5-es6-diff/"/>
    <id>https://nail2008.github.io/2016/07/08/react-es5-es6-diff/</id>
    <published>2016-07-08T06:37:44.000Z</published>
    <updated>2016-08-10T03:23:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>babel官方和一篇blog,说的已经很详细了。</p>
<p><a href="https://babeljs.io/blog/2015/06/07/react-on-es6-plus" target="_blank" rel="external">https://babeljs.io/blog/2015/06/07/react-on-es6-plus</a></p>
<p><a href="http://www.tamas.io/react-with-es6/" target="_blank" rel="external">http://www.tamas.io/react-with-es6/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;babel官方和一篇blog,说的已经很详细了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2015/06/07/react-on-es6-plus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bab
    
    </summary>
    
      <category term="Web前端" scheme="https://nail2008.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="react" scheme="https://nail2008.github.io/tags/react/"/>
    
      <category term="es5" scheme="https://nail2008.github.io/tags/es5/"/>
    
      <category term="es6" scheme="https://nail2008.github.io/tags/es6/"/>
    
      <category term="babel" scheme="https://nail2008.github.io/tags/babel/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://nail2008.github.io/2016/07/06/hello-world/"/>
    <id>https://nail2008.github.io/2016/07/06/hello-world/</id>
    <published>2016-07-06T06:34:16.000Z</published>
    <updated>2016-07-06T06:34:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
