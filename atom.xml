<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>丁丁爱历险</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nail2008.github.io/"/>
  <updated>2017-06-19T08:20:23.000Z</updated>
  <id>https://nail2008.github.io/</id>
  
  <author>
    <name>一丁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ehcache使用JGroups做组播集群</title>
    <link href="https://nail2008.github.io/2017/06/16/distributed-ehcache-with-jgroups/"/>
    <id>https://nail2008.github.io/2017/06/16/distributed-ehcache-with-jgroups/</id>
    <published>2017-06-16T08:19:05.000Z</published>
    <updated>2017-06-19T08:20:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于缓存的几点小想法"><a href="#关于缓存的几点小想法" class="headerlink" title="关于缓存的几点小想法"></a>关于缓存的几点小想法</h2><p>开篇先跑跑题。最近在研究集群环境下的缓存同步问题，Web开发领域常见的几种缓存技术：Ehcache、Redis和memcached。<br>Ehcache是我们现在用的，它的最大优点是它是纯Java的，跟应用跑在同一个JVM里，不存在传输上的开销；<br>Redis在用作缓存时常同memcached对比，我们知道他可以做缓存服务之外，其实他本身是个数据库，甚至自身就可以做消息队列。  </p>
<p>从Ehcache、Redis中的测试报告来看，都说自己更快，这是因为他们都偷换了概念，以己之长比别人的短处。<br>Ehcache长处在JVM运行，但这只是单点，跟Redis比单点肯定有优势。免费方案只能考虑做组播，组播对网络环境要求较高，而且如果集群节点很多，组播次数呈级数上升，形成组播风暴，可用性很差。<br>Redis单点可能比不过Ehcache，但可以集中或集群式部署缓存服务，供分布式系统中的其他业务服务使用。各个节点采用订阅模式，当某一节点相关缓存更新，通知Redis，Redis在发布给订阅的节点更新缓存。有多少节点就发多少次。</p>
<p>这里不做过多发散，直接说我的小想法——用Ehcache和Redis做二级缓存。<br>Ehcache做一级缓存，查询优先从这里查数据，如果没有再去二级缓存Redis上查找，如果还没有，再去数据库查询。</p>
<p>但是很不幸。。已经有人这么做过了——<a href="https://www.oschina.net/p/j2cache" target="_blank" rel="external">J2Cache</a><br>思路一致，不过好像太监了。1.3版都没提交中心库。</p>
<h2 id="Ehcache使用JGroups做组播集群"><a href="#Ehcache使用JGroups做组播集群" class="headerlink" title="Ehcache使用JGroups做组播集群"></a>Ehcache使用JGroups做组播集群</h2><p>那既然组播有缺点，为啥还要写这个呢？因为如果你只是做2-3个节点的负载均衡，其实这东西还是靠谱的，又由于很多资料不靠谱，我觉得还是把我梳理的写出来。</p>
<p>跑题结束，下面说正事。</p>
<h3 id="jar依赖添加"><a href="#jar依赖添加" class="headerlink" title="jar依赖添加"></a>jar依赖添加</h3><p><a href="http://www.jgroups.org/manual/index.html#Requirements" target="_blank" rel="external">jgroups官方文档2.1节</a>中有如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">2.1. Requirements</div><div class="line">JGroups up to (and including) 3.5.0.Final requires JDK 6.</div><div class="line"></div><div class="line">JGroups 3.6.x to (excluding) 4.0 requires JDK 7.</div><div class="line"></div><div class="line">JGroups 4.0 will require JDK 8.</div><div class="line"></div><div class="line">There is no JNI code present so JGroups should run on all platforms.</div><div class="line"></div><div class="line">Logging: by default, JGroups tries to use log4j2. If the classes are not found on the classpath, it resorts to log4j, and if still not found, it falls back to java.util.logging logger. See Logging for details on log configuration.</div></pre></td></tr></table></figure></p>
<ul>
<li>3.6.0（不含）以下的版本需要JDK6   </li>
<li>3.6.x 以上到4.0（不含）需要JDK7   </li>
<li>4.0以上的需要JDK8  </li>
<li>需要log4j或者log4j2</li>
</ul>
<p>比如，我们的一个项目依赖如下：<br>JDK6<br>ehcache-core-2.6.11.jar<br>jgroups-3.5.1.Final.jar  </p>
<p>另外还需要下面这个jar包，用来整合jgroups和ehcache，点击可以下载：<br><a href="http://mvnrepository.com/artifact/net.sf.ehcache/ehcache-jgroupsreplication/1.7" target="_blank" rel="external">ehcache-jgroupsreplication-1.7.jar</a></p>
<p>最后还有一些jar包：<br>slf4j-api-1.6.6.jar<br>slf4j-jdk14-1.6.6.jar<br>log4j-1.2.13.jar</p>
<h3 id="组播策略"><a href="#组播策略" class="headerlink" title="组播策略"></a>组播策略</h3><p>组播策略是我们在编写配置文件前需要考虑的问题，我们选择的是<code>通知失效策略</code>。<br>即各节点独立维护自己的缓存，当一个节点的某缓存发生变化时，并不将改变化同步复制到其他节点。而是通知其他节点清除该缓存。</p>
<p>选择这种策略的原因是我们的应用服务器在Nginx上使用了<code>IP哈希策略</code>，一个设备的用户请求会固定由一个应用服务器处理。这种情况下，<br>很多数据是不用在其他节点缓存具体数据的，只在自己的节点有就行，使用<code>通知失效策略</code>减小了同步缓存的开销。</p>
<p>而ehcache可以对不同的数据配置不同的策略，比如<code>在线用户名单</code>之类的全局数据我们依然可以使用同步复制的策略，保持各节点下该缓存的数据是一致的。</p>
<h3 id="集群策略"><a href="#集群策略" class="headerlink" title="集群策略"></a>集群策略</h3><p>一开始我们用了两台机器，不在同一个网段。采用UDP，自动发现的情况下没有问题；但是采用TCP，指定IP的时候就死活不成功，直到挪到同一台，不同端口才成功。（没试同一网段，以后再说。）</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>需要修改ehcache配置文件<code>ehcache.xml</code>，我还把jgroups的配置文件独立了出来，所以还要新建一个<code>jgroups_tcp.xml</code>。  </p>
<h4 id="jgroups-tcp-xml"><a href="#jgroups-tcp-xml" class="headerlink" title="jgroups_tcp.xml"></a><code>jgroups_tcp.xml</code></h4><p>官方默认配置例子在jar包里的<code>tcp.xml</code>。下面的例子只修改了两个应用的ip及端口（bind_port、initial_hosts配置），如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--</span></div><div class="line">    TCP based stack, with flow control and message bundling. This is usually used when IP</div><div class="line">    multicasting cannot be used in a network, e.g. because it is disabled (routers discard multicast).</div><div class="line">    Note that TCP.bind_addr and TCPPING.initial_hosts should be set, possibly via system properties, e.g.</div><div class="line">    -Djgroups.bind_addr=192.168.5.2 and -Djgroups.tcpping.initial_hosts=192.168.5.2[7800]</div><div class="line">    author: Bela Ban</div><div class="line">--&gt;</div><div class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line">        <span class="attr">xmlns</span>=<span class="string">"urn:org:jgroups"</span></div><div class="line">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"urn:org:jgroups http://www.jgroups.org/schema/jgroups.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">TCP</span> <span class="attr">bind_port</span>=<span class="string">"40000"</span></span></div><div class="line">         <span class="attr">recv_buf_size</span>=<span class="string">"$&#123;tcp.recv_buf_size:5M&#125;"</span></div><div class="line">         <span class="attr">send_buf_size</span>=<span class="string">"$&#123;tcp.send_buf_size:5M&#125;"</span></div><div class="line">         <span class="attr">max_bundle_size</span>=<span class="string">"64K"</span></div><div class="line">         <span class="attr">max_bundle_timeout</span>=<span class="string">"30"</span></div><div class="line">         <span class="attr">use_send_queues</span>=<span class="string">"true"</span></div><div class="line">         <span class="attr">sock_conn_timeout</span>=<span class="string">"300"</span></div><div class="line"></div><div class="line">         <span class="attr">timer_type</span>=<span class="string">"new3"</span></div><div class="line">         <span class="attr">timer.min_threads</span>=<span class="string">"4"</span></div><div class="line">         <span class="attr">timer.max_threads</span>=<span class="string">"10"</span></div><div class="line">         <span class="attr">timer.keep_alive_time</span>=<span class="string">"3000"</span></div><div class="line">         <span class="attr">timer.queue_max_size</span>=<span class="string">"500"</span></div><div class="line"></div><div class="line">         <span class="attr">thread_pool.enabled</span>=<span class="string">"true"</span></div><div class="line">         <span class="attr">thread_pool.min_threads</span>=<span class="string">"2"</span></div><div class="line">         <span class="attr">thread_pool.max_threads</span>=<span class="string">"8"</span></div><div class="line">         <span class="attr">thread_pool.keep_alive_time</span>=<span class="string">"5000"</span></div><div class="line">         <span class="attr">thread_pool.queue_enabled</span>=<span class="string">"true"</span></div><div class="line">         <span class="attr">thread_pool.queue_max_size</span>=<span class="string">"10000"</span></div><div class="line">         <span class="attr">thread_pool.rejection_policy</span>=<span class="string">"discard"</span></div><div class="line"></div><div class="line">         <span class="attr">oob_thread_pool.enabled</span>=<span class="string">"true"</span></div><div class="line">         <span class="attr">oob_thread_pool.min_threads</span>=<span class="string">"1"</span></div><div class="line">         <span class="attr">oob_thread_pool.max_threads</span>=<span class="string">"8"</span></div><div class="line">         <span class="attr">oob_thread_pool.keep_alive_time</span>=<span class="string">"5000"</span></div><div class="line">         <span class="attr">oob_thread_pool.queue_enabled</span>=<span class="string">"false"</span></div><div class="line">         <span class="attr">oob_thread_pool.queue_max_size</span>=<span class="string">"100"</span></div><div class="line">         <span class="attr">oob_thread_pool.rejection_policy</span>=<span class="string">"discard"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TCPPING</span> <span class="attr">async_discovery</span>=<span class="string">"true"</span></span></div><div class="line">             <span class="attr">initial_hosts</span>=<span class="string">"$&#123;jgroups.tcpping.initial_hosts:localhost[40000],localhost[40001]&#125;"</span></div><div class="line">             <span class="attr">port_range</span>=<span class="string">"1"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">MERGE3</span>  <span class="attr">min_interval</span>=<span class="string">"10000"</span></span></div><div class="line">             <span class="attr">max_interval</span>=<span class="string">"30000"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">FD_SOCK</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">FD</span> <span class="attr">timeout</span>=<span class="string">"3000"</span> <span class="attr">max_tries</span>=<span class="string">"3"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">VERIFY_SUSPECT</span> <span class="attr">timeout</span>=<span class="string">"1500"</span>  /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">BARRIER</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">pbcast.NAKACK2</span> <span class="attr">use_mcast_xmit</span>=<span class="string">"false"</span></span></div><div class="line">                    <span class="attr">discard_delivered_msgs</span>=<span class="string">"true"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">UNICAST3</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">pbcast.STABLE</span> <span class="attr">stability_delay</span>=<span class="string">"1000"</span> <span class="attr">desired_avg_gossip</span>=<span class="string">"50000"</span></span></div><div class="line">                   <span class="attr">max_bytes</span>=<span class="string">"4M"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">pbcast.GMS</span> <span class="attr">print_local_addr</span>=<span class="string">"true"</span> <span class="attr">join_timeout</span>=<span class="string">"2000"</span></span></div><div class="line">                <span class="attr">view_bundling</span>=<span class="string">"true"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">MFC</span> <span class="attr">max_credits</span>=<span class="string">"2M"</span></span></div><div class="line">         <span class="attr">min_threshold</span>=<span class="string">"0.4"</span>/&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">FRAG2</span> <span class="attr">frag_size</span>=<span class="string">"60K"</span>  /&gt;</span></div><div class="line">    <span class="comment">&lt;!--RSVP resend_interval="2000" timeout="10000"/--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">pbcast.STATE_TRANSFER</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="ehcache-xml"><a href="#ehcache-xml" class="headerlink" title="ehcache.xml"></a><code>ehcache.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line">		 <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">"ehcache.xsd"</span> <span class="attr">updateCheck</span>=<span class="string">"false"</span></div><div class="line">		 <span class="attr">monitoring</span>=<span class="string">"autodetect"</span> <span class="attr">dynamicConfig</span>=<span class="string">"false"</span>&gt;</div><div class="line">	<span class="comment">&lt;!--start count --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">defaultCache</span> <span class="attr">maxElementsInMemory</span>=<span class="string">"100000"</span> <span class="attr">eternal</span>=<span class="string">"true"</span></span></div><div class="line">				  <span class="attr">overflowToDisk</span>=<span class="string">"false"</span> <span class="attr">diskSpoolBufferSizeMB</span>=<span class="string">"30"</span> <span class="attr">maxElementsOnDisk</span>=<span class="string">"10000000"</span></div><div class="line">				  <span class="attr">diskPersistent</span>=<span class="string">"false"</span> <span class="attr">statistics</span>=<span class="string">"true"</span></div><div class="line">				  <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">"120"</span> <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">terracotta</span> <span class="attr">clustered</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line">		<span class="comment">&lt;!-- 默认采用失效通知策略，各节点独立维护自己的缓存，缓存发生变化时，通知其他节点清除 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">cacheEventListenerFactory</span></span></div><div class="line">				<span class="attr">class</span>=<span class="string">"net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory"</span></div><div class="line">				<span class="attr">properties</span>=<span class="string">"replicateAsynchronously=true, replicatePuts=false, replicateUpdates=false,</span></div><div class="line">			replicateUpdatesViaCopy=false, replicateRemovals=true "/&gt;</div><div class="line">		<span class="comment">&lt;!-- cacheEventListenerFactory属性properties说明 --&gt;</span></div><div class="line">		<span class="comment">&lt;!--</span></div><div class="line">		replicateAsynchronously : 对象同步是否异步完成，默认为true。如果比较紧急就设为false。</div><div class="line">		                          在一致性时间性要求不强的时候，设为异步可大大提供性能，因为它是异步立即返回的，而且可以批量提交。</div><div class="line">		replicateUpdatesViaCopy : 是否将对象变更复制到所有节点，还是只是发送一个失效信息，让对方该缓存失效，当对方需要该缓存时重新计算载入。</div><div class="line">		                          默认为true。鉴于对象复制的消耗挺大的，又有锁的问题，而且对方也未必需要该对象，所以此属性建议设为false。</div><div class="line">		                          如果业务上真的需要设为true时，就可考虑使用Terracotta了。</div><div class="line">		replicatePuts : 增加对象时是否同步，默认为true，如果replicateUpdatesViaCopy为false，选择了失效算法，所以replicatePuts 要设为false。</div><div class="line">		replicateUpdates : 修改对象时是否同步，默认为true。</div><div class="line">		replicateRemovals : 删除对象时是否同步，默认为true。</div><div class="line">		 --&gt;</div><div class="line">	<span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 单独设置菜单的缓存，单个菜单文件100KB，避免上万登录用户全部缓存，一般设定为并发用户数1000-2000 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"SY_ORG_USER__MENU"</span> <span class="attr">maxElementsInMemory</span>=<span class="string">"1000"</span></span></div><div class="line">		   <span class="attr">eternal</span>=<span class="string">"true"</span> <span class="attr">overflowToDisk</span>=<span class="string">"false"</span> <span class="attr">statistics</span>=<span class="string">"true"</span></div><div class="line">		   <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LRU"</span> &gt;</div><div class="line">		<span class="comment">&lt;!-- 缓存集群同步策略：各节点独立，不同步 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">cacheEventListenerFactory</span></span></div><div class="line">		<span class="attr">class</span>=<span class="string">"net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory"</span></div><div class="line">		<span class="attr">properties</span>=<span class="string">"replicateAsynchronously=true, replicatePuts=false, replicateUpdates=false,</span></div><div class="line">		replicateUpdatesViaCopy=false, replicateRemovals=false "/&gt;</div><div class="line">	<span class="tag">&lt;/<span class="name">cache</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 单独设置页面缓存，缓存时间5分钟一刷新 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"SimplePageCachingFilter"</span> <span class="attr">maxElementsInMemory</span>=<span class="string">"2000"</span></span></div><div class="line">		   <span class="attr">eternal</span>=<span class="string">"false"</span> <span class="attr">overflowToDisk</span>=<span class="string">"false"</span> <span class="attr">timeToIdleSeconds</span>=<span class="string">"300"</span></div><div class="line">		   <span class="attr">timeToLiveSeconds</span>=<span class="string">"300"</span> <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LFU"</span> &gt;</div><div class="line">		<span class="comment">&lt;!-- 缓存集群同步策略：各节点独立，不同步 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">cacheEventListenerFactory</span></span></div><div class="line">				<span class="attr">class</span>=<span class="string">"net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory"</span></div><div class="line">				<span class="attr">properties</span>=<span class="string">"replicateAsynchronously=true, replicatePuts=false, replicateUpdates=false,</span></div><div class="line">			replicateUpdatesViaCopy=false, replicateRemovals=false "/&gt;</div><div class="line">	<span class="tag">&lt;/<span class="name">cache</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!--在线用户--&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">"ONLINE_USER"</span> <span class="attr">maxElementsInMemory</span>=<span class="string">"50000"</span></span></div><div class="line">		   <span class="attr">eternal</span>=<span class="string">"true"</span> <span class="attr">overflowToDisk</span>=<span class="string">"false"</span> <span class="attr">statistics</span>=<span class="string">"true"</span> <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">"LFU"</span>&gt;</div><div class="line">		<span class="comment">&lt;!-- 缓存集群同步策略：各节点随时保持同步 --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">cacheEventListenerFactory</span></span></div><div class="line">			<span class="attr">class</span>=<span class="string">"net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory"</span></div><div class="line">			<span class="attr">properties</span>=<span class="string">"replicateAsynchronously=true, replicatePuts=true, replicateUpdates=true,</span></div><div class="line">			replicateUpdatesViaCopy=true, replicateRemovals=true "/&gt;</div><div class="line">	<span class="tag">&lt;/<span class="name">cache</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 集群 JGroup设置 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">cacheManagerPeerProviderFactory</span> <span class="attr">class</span>=<span class="string">"net.sf.ehcache.distribution.jgroups.JGroupsCacheManagerPeerProviderFactory"</span></span></div><div class="line">        <span class="attr">properties</span>=<span class="string">"jgroups_tcp.xml"</span> /&gt;</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- ehcache monitor --&gt;</span></div><div class="line">	<span class="comment">&lt;!--&lt;cacheManagerPeerListenerFactory class="org.terracotta.ehcachedx.monitor.probe.ProbePeerListenerFactory"--&gt;</span></div><div class="line">	<span class="comment">&lt;!--								 properties="monitorAddress=localhost, monitorPort=9889, memoryMeasurement=true"/&gt;--&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="调试和监控"><a href="#调试和监控" class="headerlink" title="调试和监控"></a>调试和监控</h3><h4 id="ehcache-debugger-1-7-1-jar"><a href="#ehcache-debugger-1-7-1-jar" class="headerlink" title="ehcache-debugger-1.7.1.jar"></a><code>ehcache-debugger-1.7.1.jar</code></h4><p><a href="http://www.ehcache.org/documentation/2.8/operations/remotedebugger.html" target="_blank" rel="external">http://www.ehcache.org/documentation/2.8/operations/remotedebugger.html</a><br>上面这篇是官方文档，下载到这个jar包，然后执行下面的命令，就可以监控具体缓存了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">例子：java -jar ehcache-debugger-1.7.1.jar ./../ehcache.xml _CACHE_C_OA_QJ_TYPE_DICT</div><div class="line">格式：java -jar ehcache-debugger-1.7.1.jar ehcache配置文件路径 缓存NAME（可选）</div></pre></td></tr></table></figure></p>
<p>然后你就可以看到哗哗的日志了。</p>
<h4 id="Debug断点"><a href="#Debug断点" class="headerlink" title="Debug断点"></a>Debug断点</h4><p>在类JGroupsCacheReceiver的receive方法打断点，可以监控节点获取组播消息的情况。</p>
<h4 id="Ehcache-Monitor"><a href="#Ehcache-Monitor" class="headerlink" title="Ehcache-Monitor"></a>Ehcache-Monitor</h4><p>安装见：<a href="https://nail2008.github.io/2017/05/17/how-to-use-ehcache-monitor/">Ehcache-Monitor</a></p>
<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p><a href="http://www.jgroups.org/manual/index.html" target="_blank" rel="external">JGroups官方文档</a></p>
<p>几篇不错的blog：<br><a href="http://blog.csdn.net/kindy1022/article/details/6681299" target="_blank" rel="external">http://blog.csdn.net/kindy1022/article/details/6681299</a><br><a href="https://my.oschina.net/u/866380/blog/501082" target="_blank" rel="external">https://my.oschina.net/u/866380/blog/501082</a><br><a href="http://www.cnblogs.com/fangfan/p/4042823.html" target="_blank" rel="external">http://www.cnblogs.com/fangfan/p/4042823.html</a><br><a href="http://blog.csdn.net/tengdazhang770960436/article/details/49947383" target="_blank" rel="external">http://blog.csdn.net/tengdazhang770960436/article/details/49947383</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于缓存的几点小想法&quot;&gt;&lt;a href=&quot;#关于缓存的几点小想法&quot; class=&quot;headerlink&quot; title=&quot;关于缓存的几点小想法&quot;&gt;&lt;/a&gt;关于缓存的几点小想法&lt;/h2&gt;&lt;p&gt;开篇先跑跑题。最近在研究集群环境下的缓存同步问题，Web开发领域常见的几种缓
    
    </summary>
    
      <category term="服务端" scheme="https://nail2008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    
      <category term="Ehcache" scheme="https://nail2008.github.io/tags/Ehcache/"/>
    
      <category term="JGroups" scheme="https://nail2008.github.io/tags/JGroups/"/>
    
      <category term="缓存" scheme="https://nail2008.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Ehcache Monitor 安装及使用</title>
    <link href="https://nail2008.github.io/2017/05/17/how-to-use-ehcache-monitor/"/>
    <id>https://nail2008.github.io/2017/05/17/how-to-use-ehcache-monitor/</id>
    <published>2017-05-17T08:47:36.000Z</published>
    <updated>2017-06-19T02:37:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.ehcache.org/" target="_blank" rel="external">Ehcache</a>是Java常用的缓存方案，由于直接运行在JVM里，所以还是有很多场合是Redis无法替代的。</p>
<p>监控Ehcache的手段比较单一，只有Ehcache-Monitor，当然也有<a href="http://blog.csdn.net/wiker_yong/article/details/52068420" target="_blank" rel="external">自己实现的方法</a>。</p>
<p>查看了不少相关资料，很多链接都不好使了，因为Ehcache的官网改版了。而且似乎刻意去掉了Monitor的信息，官方下载也没有了。</p>
<p>以下是我找到的1.0.3版下载地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://terracotta.org/downloads/open-source/destination?name=ehcache-monitor-kit-1.0.3-distribution.tar.gz&amp;bucket=tcdistributions&amp;file=ehcache-monitor-kit-1.0.3-distribution.tar.gz</div></pre></td></tr></table></figure></p>
<p>看README.txt这货针对不同Ehcache不同版本使用方法可能有区别，貌似各版本都能用。我使用的是2.5.1，使用正常。</p>
<p>安装方法最详细的还是官方pdf文档，中文的可以看下面两篇：<br><a href="http://hck.iteye.com/blog/1732660" target="_blank" rel="external">http://hck.iteye.com/blog/1732660</a><br><a href="http://www.yuananan.cn/html/article/AR64m1684VKax5Ahhp53gp.html" target="_blank" rel="external">http://www.yuananan.cn/html/article/AR64m1684VKax5Ahhp53gp.html</a></p>
<p>注意注释掉启动文件<code>ehcache-monitor-kit-1.0.3\bin\startup.bat</code>里：<code>-j %PRGDIR%\etc\jetty.xml ^</code>行。</p>
<p>官方参考：<br><a href="http://www.ehcache.org/documentation/ehcache-2.5.x-documentation.pdf" target="_blank" rel="external">http://www.ehcache.org/documentation/ehcache-2.5.x-documentation.pdf</a><br><a href="http://blog.trifork.com/2009/12/22/using-ehcache-monitor/" target="_blank" rel="external">http://blog.trifork.com/2009/12/22/using-ehcache-monitor/</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.ehcache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ehcache&lt;/a&gt;是Java常用的缓存方案，由于直接运行在JVM里，所以还是有很多场合是Redis无法替代的。&lt;/p&gt;
&lt;p&gt;监控Ehcac
    
    </summary>
    
      <category term="服务端" scheme="https://nail2008.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    
      <category term="Ehcache" scheme="https://nail2008.github.io/tags/Ehcache/"/>
    
      <category term="Ehcache-Monitor" scheme="https://nail2008.github.io/tags/Ehcache-Monitor/"/>
    
      <category term="缓存" scheme="https://nail2008.github.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>CSS3布局</title>
    <link href="https://nail2008.github.io/2016/08/29/css3-layout-features/"/>
    <id>https://nail2008.github.io/2016/08/29/css3-layout-features/</id>
    <published>2016-08-29T02:55:27.000Z</published>
    <updated>2016-08-31T10:45:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>发现个不错的CSS布局教程——<a href="http://zh.learnlayout.com/" target="_blank" rel="external">学习Css布局</a><br>用<a href="http://codepen.io/collection/XpbVGg/" target="_blank" rel="external">codepen</a>边学边做,练习了一下。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="display属性"><a href="#display属性" class="headerlink" title="display属性"></a>display属性</h3><ul>
<li>block: 标准块级元素,新开始一行并尽可能撑满</li>
<li>inline(默认): 标准行内元素,比如span包裹一些文字而不会打乱段落的布局</li>
<li>none: 隐藏元素,不会保留元素本该显示的空间</li>
<li>inline-block: 见下文 </li>
<li>flex: 见下文</li>
</ul>
<blockquote>
<p>技巧: margin: 0 auto;<br>设置块级元素的width(更好的方式是用max-width设置最大宽度)阻止它从左到右撑满容器,然后设置左右外边距为auto来使其水平居中</p>
</blockquote>
<h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><p>此处省略500字,这里不是为了介绍盒模型,当各种block的内外边距影响块的实际大小时,我们需要以下技巧消除对布局造成的影响。</p>
<blockquote>
<p>技巧: * { box-sizing:border-box; }</p>
</blockquote>
<h3 id="用position属性来布局"><a href="#用position属性来布局" class="headerlink" title="用position属性来布局"></a>用position属性来布局</h3><ul>
<li>static(默认): 不会被特殊的定位</li>
<li>relative: 相对定位,再配合top、right、bottom和left属性对位置设置偏离</li>
<li>fixed: 固定定位,跟relative类似可以通过top等设置偏离,区别是它将固定在位置上,不随页面滚动移动</li>
<li>absolute: 绝对定位,相对于它的父元素定位,可以配合top等设置偏离</li>
</ul>
<blockquote>
<p>Demo: 使用position的方式布局<br><a href="http://zh.learnlayout.com/position-example.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/JRPprW" target="_blank" rel="external">代码</a><br>菜单nav使用绝对位置,当过长时会超出容器。这种方式有些落后了。</p>
</blockquote>
<h3 id="用float属性来布局"><a href="#用float属性来布局" class="headerlink" title="用float属性来布局"></a>用float属性来布局</h3><blockquote>
<p>Demo: 使用float属性实现图片右对齐,文字环绕<br><a href="http://zh.learnlayout.com/float.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/RGbQYJ" target="_blank" rel="external">代码</a>  </p>
<p>技巧: 使用clear属性消除左右浮动:left、right、both,效果相当于换行<br><a href="http://zh.learnlayout.com/clear.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/pEzaQv" target="_blank" rel="external">代码</a><br>但这有个问题是当该元素比旁边的元素要长时,会冲破容器,看下面的例子:</p>
<p>技巧: 使用clearfix hack消除浮动<br><a href="http://zh.learnlayout.com/clearfix.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/JRPpQO" target="_blank" rel="external">代码</a><br>下面的代码彻底解决了这个问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">img &#123;</div><div class="line">  float: right;</div><div class="line">  //....</div><div class="line">&#125;</div><div class="line">.clearfix &#123;</div><div class="line">  overflow: auto;</div><div class="line">  zoom: 1;  /* IE6 */</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Demo: 使用float的方式布局<br><a href="http://zh.learnlayout.com/float-layout.html" target="_blank" rel="external">教程1</a> <a href="http://zh.learnlayout.com/percent.html" target="_blank" rel="external">教程2</a> <a href="https://codepen.io/nail2008/pen/YGKazO" target="_blank" rel="external">代码</a><br>之前的主流方法之一,建议宽度使用百分比</p>
<p>Demo: 使用媒体查询实现响应式布局<br><a href="http://zh.learnlayout.com/media-queries.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/ozvqXd" target="_blank" rel="external">代码</a>  </p>
</blockquote>
<h3 id="用inline-block来布局"><a href="#用inline-block来布局" class="headerlink" title="用inline-block来布局"></a>用inline-block来布局</h3><p><a href="http://zh.learnlayout.com/inline-block.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/yaBjZK" target="_blank" rel="external">代码</a><br>以下两种等价:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.box &#123;</div><div class="line">  float: left;</div><div class="line">  width: 200px;</div><div class="line">  height: 100px;</div><div class="line">  margin: 1em;</div><div class="line">&#125;</div><div class="line">.after-box &#123;</div><div class="line">  clear: left;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">.box2 &#123;</div><div class="line">  display: inline-block;</div><div class="line">  width: 200px;</div><div class="line">  height: 100px;</div><div class="line">  margin: 1em;</div><div class="line">  </div><div class="line">  *display: inline; /*IE6*/</div><div class="line">  *zoom: 1; /*IE6*/</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>Demo: 使用inline-block布局<br><a href="http://zh.learnlayout.com/inline-block-layout.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/ALAaqm" target="_blank" rel="external">代码</a><br>这例子在我这有问题,宽度超过了容器,串行了</p>
</blockquote>
<h3 id="多列column-IE10"><a href="#多列column-IE10" class="headerlink" title="多列column (IE10+)"></a>多列column (IE10+)</h3><p><a href="http://zh.learnlayout.com/column.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/ORLkxm" target="_blank" rel="external">代码</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.three-column &#123;</div><div class="line">  padding: 1em;</div><div class="line">  column-count: 3;</div><div class="line">  column-gap: 1em;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="用flex来布局"><a href="#用flex来布局" class="headerlink" title="用flex来布局"></a>用flex来布局</h3><p><a href="http://zh.learnlayout.com/flexbox.html" target="_blank" rel="external">教程</a> <a href="https://codepen.io/nail2008/pen/VKkxyZ" target="_blank" rel="external">代码</a>  </p>
<p>建议看下面的资料来学习,本文说的比较简单:<br><a href="http://www.jikexueyuan.com/course/1403.html" target="_blank" rel="external">CSS3布局属性全接触@极客学院</a><br><a href="https://demos.scotch.io/visual-guide-to-css3-flexbox-flexbox-playground/demos/" target="_blank" rel="external">Flexbox Playground</a>  </p>
<blockquote>
<p>技巧: flex布局默认所有元素高度为最高的那个元素的高度(横向)</p>
<p>技巧: 子元素占满剩余空间:设置子元素 flex:1</p>
<p>技巧: 水平、垂直都居中</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.vertical-container &#123;</div><div class="line">  display: flex;</div><div class="line">  align-items: center;</div><div class="line">  justify-content: center;</div><div class="line">  // ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料:"></a>其他资料:</h2><p><a href="http://www.css88.com/book/css/properties/layout/index.htm" target="_blank" rel="external">CSS参考手册</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现个不错的CSS布局教程——&lt;a href=&quot;http://zh.learnlayout.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习Css布局&lt;/a&gt;&lt;br&gt;用&lt;a href=&quot;http://codepen.io/collection/
    
    </summary>
    
      <category term="Web前端" scheme="https://nail2008.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css3" scheme="https://nail2008.github.io/tags/css3/"/>
    
      <category term="布局" scheme="https://nail2008.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>老浏览器支持HTML5和CSS3</title>
    <link href="https://nail2008.github.io/2016/08/25/html5-css3-support-in-old-browser/"/>
    <id>https://nail2008.github.io/2016/08/25/html5-css3-support-in-old-browser/</id>
    <published>2016-08-25T02:35:00.000Z</published>
    <updated>2016-08-25T02:41:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML5支持"><a href="#HTML5支持" class="headerlink" title="HTML5支持"></a>HTML5支持</h2><p>使用<strong>html5shiv</strong>可以使IE6、7、8等浏览器也支持HTML5，只要在页面引入下面的代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[if lt IE 9]&gt;</div><div class="line">    &lt;script src="bower_components/html5shiv/dist/html5shiv.js"&gt;&lt;/script&gt;</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure></p>
<p>项目地址：<a href="https://github.com/aFarkas/html5shiv" target="_blank" rel="external">https://github.com/aFarkas/html5shiv</a><br>中文资料：<a href="http://www.zhangxinxu.com/wordpress/2013/02/github-html5shiv-readme-translate/" target="_blank" rel="external">http://www.zhangxinxu.com/wordpress/2013/02/github-html5shiv-readme-translate/</a></p>
<h2 id="CSS3支持"><a href="#CSS3支持" class="headerlink" title="CSS3支持"></a>CSS3支持</h2><p>使用<strong>ie-css3.htc</strong>可以使老浏览器支持CSS3的大部分特性，<a href="http://www.cnblogs.com/platero/archive/2010/08/31/1870151.html" target="_blank" rel="external">IE中的CSS3不完全兼容方案</a></p>
<h4 id="Opacity透明度"><a href="#Opacity透明度" class="headerlink" title="Opacity透明度"></a>Opacity透明度</h4><p>元素的透明度在IE中可以很方便的用滤镜来实现。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">background-color:green;</div><div class="line">opacity: .4;</div><div class="line">filter:progid:DXImageTransform.Microsoft.alpha(opacity=40);</div></pre></td></tr></table></figure></p>
<p>这里半透明区域<br>opacity: .4;</p>
<p>filter:alpha(opacity=40);</p>
<h4 id="border-radius圆角-Box-Shadow盒阴影-Text-Shadow文字阴影"><a href="#border-radius圆角-Box-Shadow盒阴影-Text-Shadow文字阴影" class="headerlink" title="border-radius圆角/Box Shadow盒阴影/Text Shadow文字阴影"></a>border-radius圆角/Box Shadow盒阴影/Text Shadow文字阴影</h4><p>在IE中可以利用Vector Markup Language (VML)和javascript来实现这些效果，参见IE-CSS3，在引用了一个HTC文件后，在IE浏览器中就可以使用这三种CSS3属性了。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">-moz-border-radius</span>: 15<span class="selector-tag">px</span>; <span class="comment">/* Firefox */</span></div><div class="line"><span class="selector-tag">-webkit-border-radius</span>: 15<span class="selector-tag">px</span>; <span class="comment">/* Safari 、Chrome */</span></div><div class="line"><span class="selector-tag">border-radius</span>: 15<span class="selector-tag">px</span>; <span class="comment">/* Opera 10.5+, IE6+ 使用 IE-CSS3*/</span></div><div class="line"><span class="selector-tag">-moz-box-shadow</span>: 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#000</span>; <span class="comment">/* Firefox */</span></div><div class="line"><span class="selector-tag">-webkit-box-shadow</span>: 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#000</span>; <span class="comment">/* Safari、Chrome */</span></div><div class="line"><span class="selector-tag">box-shadow</span>: 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 50<span class="selector-tag">px</span> <span class="selector-id">#000</span>; <span class="comment">/* Opera 10.5+，IE6+ 使用 IE-CSS3 */</span></div><div class="line"><span class="selector-tag">behavior</span>: <span class="selector-tag">url</span>(<span class="selector-tag">ie-css3</span><span class="selector-class">.htc</span>); <span class="comment">/*引用ie-css3.htc */</span></div></pre></td></tr></table></figure></p>
<p>实际上，在IE中有滤镜来实现阴影(shadow)和投影(drop-shadow)效果的</p>
<p>shadow会产生连续、渐变的阴影<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">filter: progid:DXImageTransform.Microsoft.Shadow(color='#000000', Direction=145, Strength=10);</div></pre></td></tr></table></figure></p>
<p>drop-shadow产生的阴影没有明暗变化<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">filter:progid:DXImageTransform.Microsoft.DropShadow(Color="#6699CC",OffX="5",OffY="5",Positive="1");</div></pre></td></tr></table></figure></p>
<p>滤镜似乎和现有的htc脚本有冲突，或者可以称之为特性：两者同时在一个元素上启用的时候，滤镜效果会转移到其子元素上</p>
<h4 id="Gradients渐变"><a href="#Gradients渐变" class="headerlink" title="Gradients渐变"></a>Gradients渐变</h4><p>IE中提供了一个简单的渐变滤镜<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">background-image: -moz-linear-gradient(top, #444444, #999999); /* FF3.6 */</div><div class="line">background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, #444444),color-stop(1, #999999)); /* Saf4+, Chrome */</div><div class="line">filter:  progid:DXImageTransform.Microsoft.gradient(startColorStr='#444444', EndColorStr='#999999'); /* IE6+ */</div></pre></td></tr></table></figure></p>
<p>在实现IE中的渐变很简单</p>
<h4 id="RGBA透明度颜色背景"><a href="#RGBA透明度颜色背景" class="headerlink" title="RGBA透明度颜色背景"></a>RGBA透明度颜色背景</h4><p>渐变滤镜支持RGBA的颜色，startColorStr和EndColorStr的前两位是Alpha通道值。使用带alpha通道来模拟RGBA颜色背景的同时，应该去掉其background-color属性。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">background-color: rgba(0, 255, 0, 0.6); /* FF3+, Saf3+,Opera 10.10+, Chrome */</div><div class="line">filter:progid:DXImageTransform.Microsoft.gradient(startColorStr='#9900FF00',EndColorStr='#9900FF00'); /* IE6+*/</div></pre></td></tr></table></figure></p>
<h4 id="Multiple-Backgrounds多重背景图片"><a href="#Multiple-Backgrounds多重背景图片" class="headerlink" title="Multiple Backgrounds多重背景图片"></a>Multiple Backgrounds多重背景图片</h4><p>支持CSS3多重背景图片的浏览器中可以用下面的语句来实现背景多重图片：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">url</span>(<span class="selector-tag">bg-image-1</span><span class="selector-class">.gif</span>) <span class="selector-tag">center</span> <span class="selector-tag">center</span> <span class="selector-tag">no-repeat</span>, <span class="selector-tag">url</span>(<span class="selector-tag">bg-image-2</span><span class="selector-class">.gif</span>) <span class="selector-tag">top</span> <span class="selector-tag">left</span>;</div></pre></td></tr></table></figure></p>
<p>要在IE中实现多背景图片，在需要在单独的IE hack样式表中加入下面的代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">background: transparent url(bg-image-1.gif) top left repeat;</div><div class="line">filter: progid:DXImageTransform.Microsoft.AlphaImageLoader (src='bg-image-2.gif', sizingMethod='crop'); /* IE6+ */</div></pre></td></tr></table></figure></p>
<p>CSS3浏览器的多重背景</p>
<p>IE的多重背景</p>
<h4 id="Tranformations-rotate旋转元素"><a href="#Tranformations-rotate旋转元素" class="headerlink" title="Tranformations/rotate旋转元素"></a>Tranformations/rotate旋转元素</h4><p>IE中有两个滤镜可以实现元素的旋转，BasicImage和Matrix，前者简单方便但是只能做90*n(n∈{1,2,3,4})度的旋转；Matrix滤镜功能强大，但是参数复杂。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-moz-transform: rotate(180deg);  /* FF3.5+ */</div><div class="line">-o-transform: rotate(180deg);  /* Opera 10.5 */</div><div class="line">-webkit-transform: rotate(180deg);  /* Saf3.1+, Chrome */</div><div class="line"> </div><div class="line">filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);</div><div class="line">filter:progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand',M11=-1, M12=-1.2246063538223772e-16, M21=1.2246063538223772e-16, M22=-1);</div></pre></td></tr></table></figure></p>
<p>旋转也很简单</p>
<h4 id="font-face服务器端字体"><a href="#font-face服务器端字体" class="headerlink" title="@font-face服务器端字体"></a>@font-face服务器端字体</h4><p>考虑到汉字字体的尺寸，这个CSS3的特性不算实用<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">font-family:'webFont';</div><div class="line">src:url('myfont.eot');/*IE6+*/</div><div class="line"> </div><div class="line">src:local('fontname'),/*字体名称*/</div><div class="line">url('myfont.woff') format('woff'),/*FF3.6*/</div><div class="line">url('myfont.ttf') format('truetype');/*saf3+,chrome,FF3.5,opera10+*/</div></pre></td></tr></table></figure></p>
<p>字体声明并引用了以后，可以在网页的其他地方用font-family使用这一字体。</p>
<p>可以在同一个元素上启用多个滤镜，如：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">filter: progid:DXImageTransform.Microsoft.Shadow(color='#000000', Direction=145, Strength=5)progid:DXImageTransform.Microsoft.Alpha(opacity=40);</div></pre></td></tr></table></figure></p>
<p>虽然一些用滤镜模仿CSS3的效果难称完美，但在一些情况下，运用这些技术能够让我们的代码更为简洁和统一</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML5支持&quot;&gt;&lt;a href=&quot;#HTML5支持&quot; class=&quot;headerlink&quot; title=&quot;HTML5支持&quot;&gt;&lt;/a&gt;HTML5支持&lt;/h2&gt;&lt;p&gt;使用&lt;strong&gt;html5shiv&lt;/strong&gt;可以使IE6、7、8等浏览器也支持HTML5
    
    </summary>
    
      <category term="Web前端" scheme="https://nail2008.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css3" scheme="https://nail2008.github.io/tags/css3/"/>
    
      <category term="html5" scheme="https://nail2008.github.io/tags/html5/"/>
    
      <category term="ie" scheme="https://nail2008.github.io/tags/ie/"/>
    
  </entry>
  
  <entry>
    <title>Npm使用</title>
    <link href="https://nail2008.github.io/2016/08/24/how-to-use-npm/"/>
    <id>https://nail2008.github.io/2016/08/24/how-to-use-npm/</id>
    <published>2016-08-24T01:05:53.000Z</published>
    <updated>2016-11-24T03:27:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网上的教程"><a href="#网上的教程" class="headerlink" title="网上的教程"></a>网上的教程</h2><p>网上有很多,不废话了:</p>
<ul>
<li><a href="https://docs.npmjs.com/" target="_blank" rel="external">官方教程</a></li>
<li><a href="http://www.cnblogs.com/fsjohnhuang/p/4178019.html" target="_blank" rel="external">NPM入了个门</a></li>
<li><a href="http://www.runoob.com/nodejs/nodejs-npm.html" target="_blank" rel="external">菜鸟教程</a></li>
</ul>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="npm-ls-module-name"><a href="#npm-ls-module-name" class="headerlink" title="npm ls module_name"></a>npm ls module_name</h3><p>查看依赖的使用情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cdp-ui duanyiding$ npm ls jquery</div><div class="line">cdp-ui@0.0.1 /Users/duanyiding/WebstormProjects/cdp-ui</div><div class="line">`-- rc-queue-anim@0.12.4</div><div class="line">  `-- velocity-animate@1.2.3</div><div class="line">    `-- jquery@3.1.0</div></pre></td></tr></table></figure></p>
<h3 id="npm-info-view-module-name"><a href="#npm-info-view-module-name" class="headerlink" title="npm info(view) module_name"></a>npm info(view) module_name</h3><p>列出详细信息，如果只想查看版本：npm info module_name versions  </p>
<h3 id="npm-outdated"><a href="#npm-outdated" class="headerlink" title="npm outdated"></a>npm outdated</h3><p>检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新   </p>
<h3 id="npm-root-g"><a href="#npm-root-g" class="headerlink" title="npm root -g"></a>npm root -g</h3><p>查看全局的包的安装路径  </p>
<h2 id="常用命令简写"><a href="#常用命令简写" class="headerlink" title="常用命令简写"></a>常用命令简写</h2><ul>
<li>-v: –version</li>
<li>-h, -?, –help, -H: –usage</li>
<li>-s, –silent: –loglevel silent</li>
<li>-q, –quiet: –loglevel warn</li>
<li>-d: –loglevel info</li>
<li>-dd, –verbose: –loglevel verbose</li>
<li>-ddd: –loglevel silly</li>
<li>-g: –global</li>
<li>-C: –prefix</li>
<li>-l: –long</li>
<li>-m: –message</li>
<li>-p, –porcelain: –parseable</li>
<li>-reg: –registry</li>
<li>-f: –force</li>
<li>-desc: –description</li>
<li>-S: –save</li>
<li>-D: –save-dev</li>
<li>-O: –save-optional</li>
<li>-B: –save-bundle</li>
<li>-E: –save-exact</li>
<li>-y: –yes</li>
<li>-n: –yes false</li>
<li>ll and la commands: ls –long</li>
</ul>
<h2 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h2><p>不使用cnpm命令行，但是使用淘宝镜像，有以下三种方式，推荐第三种：</p>
<ol>
<li><p>通过 config 配置指向国内镜像源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm config set registry http://registry.cnpmjs.org //配置指向源</div><div class="line">npm info express  //下载安装第三方包</div></pre></td></tr></table></figure>
</li>
<li><p>通过 npm 命令指定下载源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm --registry http://registry.cnpmjs.org info express</div></pre></td></tr></table></figure>
</li>
<li><p>在配置文件 ~/.npmrc 文件写入源地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nano ~/.npmrc   //打开配置文件</div><div class="line">registry =https://registry.npm.taobao.org   //写入配置文件</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="网上说得不太清除的几个事儿"><a href="#网上说得不太清除的几个事儿" class="headerlink" title="网上说得不太清除的几个事儿"></a>网上说得不太清除的几个事儿</h2><h3 id="依赖版本中使用-和-的区别"><a href="#依赖版本中使用-和-的区别" class="headerlink" title="依赖版本中使用 ~ 和 ^ 的区别"></a>依赖版本中使用 ~ 和 ^ 的区别</h3><p>这个问题其实说的是<strong>语义化版本SemVer</strong>。<br><a href="http://www.u396.com/semver-range.html" target="_blank" rel="external">语义化版本（SemVer）的范围</a> 一文是网上搜到的质量较好的中文解释。<br>但其中对~的用法没说,解释如下:<br>假设版本号为:x.y.z  </p>
<h4 id=""><a href="#" class="headerlink" title="~"></a>~</h4><p>~x 表示 x.不能变,后边的随便<br>~x.y 表示 x.y.不能变,后边的随便<br>~x.y.z 表示 x.y.不能变,后边的随便<br>~x.y.z-beta1 表示 ~x.y.z-不能变,后边的随便  </p>
<h4 id="-1"><a href="#-1" class="headerlink" title="^"></a>^</h4><p>^x.y.z 表示x、y、z中从左往右,第一个非零位往左(包括该非零位)不能变,右边的随便  </p>
<p>关于semver的一些资料:<br><a href="http://semver.org/" target="_blank" rel="external">http://semver.org/</a><br><a href="https://cnpmjs.org/package/semver" target="_blank" rel="external">https://cnpmjs.org/package/semver</a><br><a href="https://docs.npmjs.com/misc/semver" target="_blank" rel="external">https://docs.npmjs.com/misc/semver</a>   </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网上的教程&quot;&gt;&lt;a href=&quot;#网上的教程&quot; class=&quot;headerlink&quot; title=&quot;网上的教程&quot;&gt;&lt;/a&gt;网上的教程&lt;/h2&gt;&lt;p&gt;网上有很多,不废话了:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/&quot;
    
    </summary>
    
      <category term="开发工具" scheme="https://nail2008.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="npm" scheme="https://nail2008.github.io/tags/npm/"/>
    
      <category term="semver" scheme="https://nail2008.github.io/tags/semver/"/>
    
  </entry>
  
  <entry>
    <title>Shell指令大全(Mac版)</title>
    <link href="https://nail2008.github.io/2016/08/10/shell-command-in-mac/"/>
    <id>https://nail2008.github.io/2016/08/10/shell-command-in-mac/</id>
    <published>2016-08-10T01:56:33.000Z</published>
    <updated>2017-06-19T02:35:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>龟速积累中,按照命令首字母排序</p>
<h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><h5 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h5><p>lsof（list open file）是一个列出当前系统打开文件的工具。<strong>在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件</strong>。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。</p>
<h5 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">lsof  filename 显示打开指定文件的所有进程 </div><div class="line">lsof -a 表示两个参数都必须满足时才显示结果 </div><div class="line">lsof -c string   显示COMMAND列中包含指定字符的进程所有打开的文件 </div><div class="line">lsof -u username  显示所属user进程打开的文件 </div><div class="line">lsof -g gid 显示归属gid的进程情况 </div><div class="line">lsof +d /DIR/ 显示目录下被进程打开的文件 </div><div class="line">lsof +D /DIR/ 同上，但是会搜索目录下的所有目录，时间相对较长 </div><div class="line">lsof -d FD 显示指定文件描述符的进程 </div><div class="line">lsof -n 不将IP转换为hostname，缺省是不加上-n参数 </div><div class="line">lsof -i 用以显示符合条件的进程情况 </div><div class="line">lsof -i[46] [protocol][@hostname|hostaddr][:service|port] </div><div class="line">            46 --&gt; IPv4 or IPv6 </div><div class="line">            protocol --&gt; TCP or UDP </div><div class="line">            hostname --&gt; Internet host name </div><div class="line">            hostaddr --&gt; IPv4地址 </div><div class="line">            service --&gt; /etc/service中的 service name (可以不只一个) </div><div class="line">            port --&gt; 端口号 (可以不只一个)</div></pre></td></tr></table></figure>
<h5 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h5><ul>
<li>查看22端口现在运行的情况 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsof -i :22</div></pre></td></tr></table></figure>
<ul>
<li>查看root用户进程所打开的txt文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsof -a -u root -d txt</div></pre></td></tr></table></figure>
<h5 id="延伸阅读"><a href="#延伸阅读" class="headerlink" title="延伸阅读:"></a>延伸阅读:</h5><p><a href="http://www.cnblogs.com/mydomain/archive/2011/09/27/2193560.html" target="_blank" rel="external">http://www.cnblogs.com/mydomain/archive/2011/09/27/2193560.html</a><br><a href="http://www.cnblogs.com/rootq/articles/1401850.html" target="_blank" rel="external">http://www.cnblogs.com/rootq/articles/1401850.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;龟速积累中,按照命令首字母排序&lt;/p&gt;
&lt;h3 id=&quot;lsof&quot;&gt;&lt;a href=&quot;#lsof&quot; class=&quot;headerlink&quot; title=&quot;lsof&quot;&gt;&lt;/a&gt;lsof&lt;/h3&gt;&lt;h5 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="开发工具" scheme="https://nail2008.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="shell" scheme="https://nail2008.github.io/tags/shell/"/>
    
      <category term="osx" scheme="https://nail2008.github.io/tags/osx/"/>
    
      <category term="mac" scheme="https://nail2008.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>CSS样式命名应该用id还是用class?</title>
    <link href="https://nail2008.github.io/2016/07/28/css-id-or-class/"/>
    <id>https://nail2008.github.io/2016/07/28/css-id-or-class/</id>
    <published>2016-07-28T07:25:18.000Z</published>
    <updated>2017-06-19T02:36:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h3><ul>
<li>id不可重名，class可以重复使用</li>
<li>id定义了一个独特的元素，class定义了一批同类的元素</li>
<li>id和class在优先级上是有区别的，id比class的优先级高</li>
</ul>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在复杂的css架构中,某一个组件定义的class如果单独定义可能受同名class影响并不会起作用，而使用id就一定会起效</p>
<h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><ul>
<li>顶层布局或大组件不易重名,用id来定义元素</li>
<li>组件中的子组件或元素用父组件id+子元素class的形式来定义css</li>
</ul>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//Bad：</div><div class="line">#header &#123;...&#125;</div><div class="line">.menu &#123;...&#125;</div><div class="line"></div><div class="line">//Good:</div><div class="line">#header &#123;...&#125;</div><div class="line">#header .menu &#123;...&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常识&quot;&gt;&lt;a href=&quot;#常识&quot; class=&quot;headerlink&quot; title=&quot;常识&quot;&gt;&lt;/a&gt;常识&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;id不可重名，class可以重复使用&lt;/li&gt;
&lt;li&gt;id定义了一个独特的元素，class定义了一批同类的元素&lt;/li&gt;
&lt;l
    
    </summary>
    
      <category term="Web前端" scheme="https://nail2008.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://nail2008.github.io/tags/css/"/>
    
      <category term="id" scheme="https://nail2008.github.io/tags/id/"/>
    
      <category term="class" scheme="https://nail2008.github.io/tags/class/"/>
    
  </entry>
  
  <entry>
    <title>使用es5和es6写React有什么变化</title>
    <link href="https://nail2008.github.io/2016/07/08/react-es5-es6-diff/"/>
    <id>https://nail2008.github.io/2016/07/08/react-es5-es6-diff/</id>
    <published>2016-07-08T06:37:44.000Z</published>
    <updated>2017-06-19T02:36:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>babel官方和一篇blog,说的已经很详细了。</p>
<p><a href="https://babeljs.io/blog/2015/06/07/react-on-es6-plus" target="_blank" rel="external">https://babeljs.io/blog/2015/06/07/react-on-es6-plus</a></p>
<p><a href="http://www.tamas.io/react-with-es6/" target="_blank" rel="external">http://www.tamas.io/react-with-es6/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;babel官方和一篇blog,说的已经很详细了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2015/06/07/react-on-es6-plus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bab
    
    </summary>
    
      <category term="Web前端" scheme="https://nail2008.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="react" scheme="https://nail2008.github.io/tags/react/"/>
    
      <category term="es5" scheme="https://nail2008.github.io/tags/es5/"/>
    
      <category term="es6" scheme="https://nail2008.github.io/tags/es6/"/>
    
      <category term="babel" scheme="https://nail2008.github.io/tags/babel/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://nail2008.github.io/2016/07/06/hello-world/"/>
    <id>https://nail2008.github.io/2016/07/06/hello-world/</id>
    <published>2016-07-06T06:34:16.000Z</published>
    <updated>2016-07-06T06:34:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
